@model RockstarsIT.Models.Article
@using Microsoft.Extensions.Localization
@inject IStringLocalizer<RockstarsIT.Controllers.ArticleController> Localizer
@{
    ViewData["Title"] = "Edit";
}

<h1 class="mt-3">@Localizer["edit.pagetitle"]</h1>

<hr />
<form asp-action="Edit" enctype="multipart/form-data" id="friendform">
    <div asp-validation-summary="ModelOnly" class="text-danger"></div>
    <input type="hidden" asp-for="ArticleId" />
    <div class="row g-3">
        <div class="col-md-6 mb-3">
            <label asp-for="Title" class="control-label">@Localizer["edit.title"]</label>
            <input asp-for="Title" id="txtTitel" class="textbox w-100" />
            <span asp-validation-for="Title" class="text-danger"></span>
        </div>
        <div class="col-md-6 mb-3">
            <label class="control-label">@Localizer["edit.author"]</label>
            <select asp-for="RockstarId" class="textbox w-100" asp-items="ViewBag.RockstarNames"></select>
        </div>
        <div class="col-md-6 mb-3">
            <label asp-for="Description" class="control-label">@Localizer["edit.description"]</label>
            <textarea asp-for="Description" class="textarea w-100" rows="5"></textarea>
            <span asp-validation-for="Description" class="text-danger"></span>
        </div>
        <div class="col-md-6 mb-3">
            <label class="control-label">Tribe</label>
            <select asp-for="TribeId" class="textbox w-100" asp-items="ViewBag.TribeNames"></select>
        </div>
    </div>
    <div class="form-group">
        <button onclick="SaveAll()" type="submit" value="Save" class="btn button" hidden id="save">
            @Localizer["edit.btn.save"]
            <svg class="arrowsSvg" xmlns="http://www.w3.org/2000/svg" height="24" viewBox="0 0 24 24" width="24">
                <path d="M0 0h24v24H0z" fill="none" />
                <path d="M4 18l8.5-6L4 6v12zm9-12v12l8.5-6L13 6z" />
            </svg>
        </button>
    </div>
</form>
<div class="form-group">
    <label class="control-label">@Localizer["edit.text"]</label>
    <div class="article-text-container">
        <ul class="nav nav-tabs" id="tab-list">
            @if (Model.ArticleTextBlocks != null)
            {
                @if (Model.ArticleTextBlocks.Count > 0)
                {
                    int count = 1;
                    foreach (var item in Model.ArticleTextBlocks)
                    {
                        @if (item == Model.ArticleTextBlocks.First())
                        {
                            <li class="nav-item">
                                <a class="Teksten nav-link active" onclick="DelButton.hidden = true" id="@item.ArticleTextBlockId" data-id="@item.ArticleTextBlockId" data-toggle="tab" href="#tab-@item.ArticleTextBlockId">
                                    @count
                                </a>
                            </li>
                        }
                        else
                        {
                            <li class="nav-item">
                                <a class="Teksten nav-link" onclick="DelButton.hidden = false" id="@item.ArticleTextBlockId" data-id="@item.ArticleTextBlockId" data-toggle="tab" href="#tab-@item.ArticleTextBlockId">
                                    @count
                                    @if (count > 1)
                                    {
                                        <button class="close" hidden type="button" title="Remove this page"></button>
                                    }
                                </a>
                            </li>
                        }
                        count++;
                    }
                }
            }

            <li class="nav-item" id="last-child">
                <a class="nav-link" id="add-tab" style="color:#000000;" href="">
                    @Localizer["edit.btn.addtext"]
                </a>
            </li>
            <button id="save-textblock" class="btn button" hidden>@Localizer["edit.text.save"]</button>
            <button id="VerwijderBtn" onclick="DeleteCurrentArticel();" class="btn btn-danger">@Localizer["edit.text.delete"]</button>
        </ul>
        <div class="tab-content" id="TabContent">
            @if (Model.ArticleTextBlocks != null)
            {
                @if (Model.ArticleTextBlocks.Count > 0)
                {
                    foreach (var item in Model.ArticleTextBlocks)
                    {
                        @if (item == Model.ArticleTextBlocks.First())
                        {
                            <div class="tab-pane fade show active" id="tab-@item.ArticleTextBlockId">
                                <textarea class="textarea w-100" hidden rows="5">@item.Text</textarea>
                                <textarea class="editor">
                                    @item.Text
                                </textarea>
                            </div>
                        }
                        else
                        {
                            <div class="tab-pane fade" id="tab-@item.ArticleTextBlockId">
                                <textarea class="textarea w-100" hidden rows="5">@item.Text</textarea>

                                <textarea class="editor">
                                    @item.Text
                                </textarea>
                            </div>
                        }
                    }
                }
            }
        </div>
    </div>
</div>

<div class="form-group">
    @using (Html.BeginForm("Delete", "Article", new { id = Model.ArticleId}, FormMethod.Post))
    {
        <a onclick="SaveAll()" value="Save" class="btn button text-black">
            @Localizer["edit.btn.save"]
            <img class="ml-2" height="32" width="32" src="~/icons/save-zwart.svg"/>
        </a>
        <a onclick="ConfirmDelete(this.name)" name="@Model.Title" class="btn button-cancel ml-2 text-white">
            @Localizer["edit.btn.delete"]
            <img class="ml-2" height="32" width="32" src="~/icons/bin-wit.svg" />
        </a>
        <button type="submit" id="@Model.Title" hidden/>
    }
</div>
<div>
    <a asp-action="Index" class="btn button-cancel mt-3">
        @Localizer["edit.btn.back"]
        <svg class="arrowsSvg-cancel" xmlns="http://www.w3.org/2000/svg" height="24" viewBox="0 0 24 24" width="24">
            <path d="M0 0h24v24H0z" fill="none" />
            <path d="M4 18l8.5-6L4 6v12zm9-12v12l8.5-6L13 6z" />
        </svg>
    </a>
</div>

@section Scripts {
    @{
    await Html.RenderPartialAsync("_ValidationScriptsPartial");
}

<script>
    function OpenEditor(updatefield) {
        let editelements = document.getElementsByName(updatefield);
        for(let i = 0; i < editelements.length;i++){
            if(editelements[i].hidden == true){
              editelements[i].hidden = false;
              document.getElementById(updatefield).innerHTML = "Cancel"
            }
            else{
              editelements[i].hidden = true;
              document.getElementById(updatefield).innerHTML = "Edit"
            }
        }
    }

    function ConfirmDelete(id) {
        const conbtn2 = document.getElementById(id);
        console.log(conbtn2)
        let text = "Weet je zeker dat u dit artikel wilt verwijderen?"
        if (confirm(text) == true) {
            conbtn2.click();
        }
        else {
            console.log("test");
        }
    }

    function SaveAll() {
        document.getElementById("save-textblock").click();
        document.getElementById("save").click();
    }

    function DeleteCurrentArticel() {
        let test = document.querySelector(".nav-link.active button");
        test.click();
    }

    jQuery(document).ready(function () {
        $("#loading").hide();

        $('#customFile').on('change',function(e) {
            //get the file name
            var fileName = e.target.files[0].name;
            //replace the "Choose a file" label
            $(this).next('.custom-file-label').html(fileName);
            document.getElementById("upload").focus()
        });

        $('#add-tab').click(function () {

            var data = new FormData();

            data.append('ArticleId', $("#ArticleId").val());

            $.ajax({
                async: true,
                type: "POST",
                dataType: "json",
                url: "/Article/AddTextblock",
                data: data,
                contentType: false, // Not to set any content header
                processData: false, // Not to process data
                success: function (response) {
                    if (response.Success) {
                        var tabID = $("#tab-list li").length;
                        var html = '<li class="nav-item"><a class="nav-link" data-id="' + response.ArticleTextblockId + '" data-toggle="tab" href="text-' + tabID + '" role="tab">' + tabID + '<button class="close" type="button" title="Remove this page">×</button></a></li>';
                        $('#last-child').before(html);
                        tabID++;
                    }
                },
                error: function (response) {
                    // alert("failed to add textblock");
                }
            });
        });

        $('#tab-list').on('click','.close',function(){
            var data = new FormData();
            var currentDiv = $(this);

            data.append('ArticleTextBlockId', $(this).parent().data("id"));
            $.ajax({
                async: true,
                type: "POST",
                dataType: "json",
                url: "/Article/DeleteTextBlock",
                data: data,
                contentType: false, // Not to set any content header
                processData: false, // Not to process data
                success: function (response) {
                    if (response.Success) {

                        var href = currentDiv.parent().attr('href');
                        //remove tabheader
                        currentDiv.closest(".nav-item").remove();
                        //remove tabcontent
                        $(href).remove();

                        //display first tab
                        var tabFirst = $('#tab-list a:first');
                        tabFirst.tab('show');
                    }
                },
                error: function (response) {
                    // alert("failed to delete text");
                }
            });
        });

        var allTabHeaders = $("#tab-list .Teksten.nav-link");
        var AllTabContent = $("#TabContent .tab-pane .textarea");
        var counter = 0;
        $("#save-textblock").click(function (e) {

            for (var i = 0; i < allTabHeaders.length; i++) {

                var data = new FormData();
                data.append('ArticleTextBlockId', allTabHeaders[i].id);
                data.append('ArticleId', $("#ArticleId").val());
                data.append('Text', AllTabContent[i].value);

                //oude goede
                //var activeTabHeader = $("#tab-list .nav-link.active");
                //var activeTabContent = $("#TabContent .tab-pane.active textarea");

                //oude goede
                //data.append('ArticleTextBlockId', activeTabHeader.data("id"));
                //data.append('ArticleId', $("#ArticleId").val());
                //data.append('Text', activeTabContent.val());

                $.ajax({
                    async: true,
                    type: "POST",
                    dataType: "json",
                    url: "/Article/SaveTextblock",
                    data: data,
                    contentType: false, // Not to set any content header
                    processData: false, // Not to process data
                    success: function (response) {
                        if (response.Success) {
                            //Kijkt of de laatste er in is en dan pas krijg je een message
                            counter++;
                            if (counter == allTabHeaders.length) {
                                // alert(response.Message);
                            }

                            for (const element of response.ArticleImages) {
                                var html = "<div class='upload__img-box col-3'><div style='background-image: url(" + element.Item2 + ")' class='img-bg'><div id='delete' data-id='" + element.Item1 + "' class='upload__img-close'></div></div></div>";
                                $('#wrap').append(html);
                            }
                        }
                    },
                    error: function (response) {
                        // alert("failed to upload image");
                    }
                });
            }
        });

        //upload image
        $('#upload').click(function () {

            if ($('#frmUpload').valid()) {
                $('#frmUpload').submit();
            }
            else {
                return false;
            }
        });

        $('#frmUpload').on("submit", function (event) {
            if (window.FormData !== undefined) {
                event.preventDefault();
                $('#upload').attr('disabled', 'disabled');
                $("#loading").show();
                var files = $("#customFile").get(0).files;

                // Create FormData object
                var data = new FormData();

                // Looping over all files and add it to FormData object
                for (var i = 0; i < files.length; i++) {
                    data.append('Images', files[i]);
                }

                // Adding articleId to FormData object
                data.append('ArticleId', $("#ArticleId").val());

                $.ajax({
                    async: true,
                    type: "POST",
                    dataType: "json",
                    url: "/Article/UploadImage",
                    data: data,
                    contentType: false, // Not to set any content header
                    processData: false, // Not to process data
                    success: function (response) {
                        if (response.Success) {
                            $("#loading").hide();
                            //show image
                            for (const element of response.ArticleImages) {
                                var html = "<div class='upload__img-box col-3'><div style='background-image: url(" + element.Item2 + ")' class='img-bg'><div id='delete' data-id='" + element.Item1 + "' class='upload__img-close'></div></div></div>";
                                $('#wrap').append(html);
                            }
                            //reset file input
                            $('#customFile').val('');
                            $('#customFile').next('.custom-file-label').html("Selecteer een of meerdere afbeeldingen");
                            $('#upload').removeAttr('disabled');
                        }
                    },
                    error: function (response) {
                        // alert("failed to upload image");
                    }
                });
            } else {
                // alert("FormData is not supported.");
            }
        });

      //delete image
      $(document).on("click", ".upload__img-close", function (e) {

        var currentDiv = $(this);
        // Create FormData object
        var data = new FormData();

        // Adding articleId to FormData object
        data.append('ArticleImageId', $(this).data("id"));

        $.ajax({
            async: true,
            type: "POST",
            dataType: "json",
            url: "/Article/DeleteImage",
            data: data,
            contentType: false, // Not to set any content header
            processData: false, // Not to process data
            success: function (response) {
                if (response.Success) {
                    // alert(response.Message);
                    //delete div
                    currentDiv.closest(".upload__img-box").remove();
                }
            },
            error: function (response) {
                // alert("failed to delete image");
            }
        });
      });
    });
</script>
}