@model IEnumerable<RockstarsIT.Models.PodcastEpisode>

@{
    ViewData["Title"] = "Index";
    Spotify spotify = new Spotify(); 
}

<h1 class="mt-3">PODCAST EPISODES</h1>
<div class="row">
    <div class="col-md-6  text-left">
        <a asp-action="Create" class="btn button">
            NIEUWE PODCAST EPISODE
            <img class="ml-2" height="32" width="32" src="~/icons/circle-plus-geel.svg"/>
        </a>
        <br/>
        <br/>
    </div>
    @if(ViewData["DataShowType"].ToString() == "cards" || ViewData["DataShowType"].ToString() == ""){
        <div class="col-md-6  text-right">
            <a asp-action="Index" asp-route-view ="grid" style="float:right;" class="btn button">
                <svg xmlns="http://www.w3.org/2000/svg" width="16" height="16" fill="currentColor" class="bi bi-list-ul" viewBox="0 0 16 16">
                    <path fill-rule="evenodd" d="M5 11.5a.5.5 0 0 1 .5-.5h9a.5.5 0 0 1 0 1h-9a.5.5 0 0 1-.5-.5zm0-4a.5.5 0 0 1 .5-.5h9a.5.5 0 0 1 0 1h-9a.5.5 0 0 1-.5-.5zm0-4a.5.5 0 0 1 .5-.5h9a.5.5 0 0 1 0 1h-9a.5.5 0 0 1-.5-.5zm-3 1a1 1 0 1 0 0-2 1 1 0 0 0 0 2zm0 4a1 1 0 1 0 0-2 1 1 0 0 0 0 2zm0 4a1 1 0 1 0 0-2 1 1 0 0 0 0 2z"/>
                </svg>
            </a>
        </div>
    }
    else if (ViewData["DataShowType"].ToString() == "grid")
    {
        <div class="col-md-6 text-right">
            <a asp-action="Index" asp-route-view ="cards" style="float:right;" class="btn button">
                <svg xmlns="http://www.w3.org/2000/svg" width="16" height="16" fill="currentColor" class="bi bi-grid-3x3-gap-fill" viewBox="0 0 16 16">
                    <path d="M1 2a1 1 0 0 1 1-1h2a1 1 0 0 1 1 1v2a1 1 0 0 1-1 1H2a1 1 0 0 1-1-1V2zm5 0a1 1 0 0 1 1-1h2a1 1 0 0 1 1 1v2a1 1 0 0 1-1 1H7a1 1 0 0 1-1-1V2zm5 0a1 1 0 0 1 1-1h2a1 1 0 0 1 1 1v2a1 1 0 0 1-1 1h-2a1 1 0 0 1-1-1V2zM1 7a1 1 0 0 1 1-1h2a1 1 0 0 1 1 1v2a1 1 0 0 1-1 1H2a1 1 0 0 1-1-1V7zm5 0a1 1 0 0 1 1-1h2a1 1 0 0 1 1 1v2a1 1 0 0 1-1 1H7a1 1 0 0 1-1-1V7zm5 0a1 1 0 0 1 1-1h2a1 1 0 0 1 1 1v2a1 1 0 0 1-1 1h-2a1 1 0 0 1-1-1V7zM1 12a1 1 0 0 1 1-1h2a1 1 0 0 1 1 1v2a1 1 0 0 1-1 1H2a1 1 0 0 1-1-1v-2zm5 0a1 1 0 0 1 1-1h2a1 1 0 0 1 1 1v2a1 1 0 0 1-1 1H7a1 1 0 0 1-1-1v-2zm5 0a1 1 0 0 1 1-1h2a1 1 0 0 1 1 1v2a1 1 0 0 1-1 1h-2a1 1 0 0 1-1-1v-2z"/>
                </svg>
            </a>
        </div>
    }
</div>
@if (ViewData["DataShowType"].ToString() == "grid")
{
    <div style="overflow-x:auto;">
        <form class="form-group" asp-action="index" asp-route-view="grid">
            <div class="input-group col-8">
                <span class="input-group-text" id="basic-addon1">
                    <i class="fa fa-search"></i>
                </span>
                <input type="search" class="form-control" name="searchWords" placeholder="Zoeken op">
                <input type="submit" class="btn btn-primary" value="zoeken"/>
            </div>
        </form>
        <hr/>
        <table class="table table-bordered bg-light">
            <thead class="thead-dark">
            <tr>
                <th class="align-top">
                    TITEL
                    <br/>
                    <br/>
                    <a asp-action="index" asp-route-view="grid" asp-route-orderBy="title" asp-route-orderOn="asc">
                        <img class="ml-2" height="12" width="12" src="~/icons/arrow-up.svg"/>
                    </a>
                    <a asp-action="index" asp-route-view="grid" asp-route-orderBy="title" asp-route-orderOn="desc">
                        <img class="ml-2" height="12" width="12" src="~/icons/arrow-down.svg"/>
                    </a>
                </th>
                <th class="align-top">
                    PREVIEW
                    <br/>
                </th>
                <th class="align-top">
                    AUTEUR
                    <br/>
                    <br/>
                    <a asp-action="index" asp-route-view="grid" asp-route-orderBy="author" asp-route-orderOn="asc">
                        <img class="ml-2" height="12" width="12" src="~/icons/arrow-up.svg"/>
                    </a>
                    <a asp-action="index" asp-route-view="grid" asp-route-orderBy="author" asp-route-orderOn="desc">
                        <img class="ml-2" height="12" width="12" src="~/icons/arrow-down.svg"/>
                    </a>
                </th>
                <th class="align-top">
                    TRIBE
                    <br/>
                    <br/>
                    <a asp-action="index" asp-route-view="grid" asp-route-orderBy="tribe" asp-route-orderOn="asc">
                        <img class="ml-2" height="12" width="12" src="~/icons/arrow-up.svg"/>
                    </a>
                    <a asp-action="index" asp-route-view="grid" asp-route-orderBy="tribe" asp-route-orderOn="desc">
                        <img class="ml-2" height="12" width="12" src="~/icons/arrow-down.svg"/>
                    </a>
                </th>
                <th class="align-top">
                    DATUM GEPUBLICEERD
                    <br/>
                    <a asp-action="index" asp-route-view="grid" asp-route-orderBy="datePublished" asp-route-orderOn="asc">
                        <img class="ml-2" height="12" width="12" src="~/icons/arrow-up.svg"/>
                    </a>
                    <a asp-action="index" asp-route-view="grid" asp-route-orderBy="datePublished" asp-route-orderOn="desc">
                        <img class="ml-2" height="12" width="12" src="~/icons/arrow-down.svg"/>
                    </a>
                </th>
                <th class="align-top">
                    STATUS
                    <br/>
                    <br/>
                    <a asp-action="index" asp-route-view="grid" asp-route-orderBy="status" asp-route-orderOn="asc">
                        <img class="ml-2" height="12" width="12" src="~/icons/arrow-up.svg"/>
                    </a>
                    <a asp-action="index" asp-route-view="grid" asp-route-orderBy="status" asp-route-orderOn="desc">
                        <img class="ml-2" height="12" width="12" src="~/icons/arrow-down.svg"/>
                    </a>
                </th>
                <th class="align-top">
                    Status veranderen
                    <br/>
                </th>
                <th></th>
            </tr>
            </thead>
            <tbody>
            @foreach (var item in Model)
            {
                <tr>
                   @* @if (item.Title.Length > 50)
                    {
                        <td style="min-width: 310px">
                            @item.Title.Substring(0, 50)...
                        </td>
                    }
                    else
                    {
                        <td style="min-width: 310px">
                            @item.Title
                        </td>
                    }*@
                    <td>
                        <audio id="music" preload="true">
                            <source src="@spotify.GetPreviewLink(spotify.GetSpotifyLinkId(item.URL))">
                        </audio>
                        <div id="audioplayer">
                            <i id="pButton" class="fas fa-play"></i>
                            <div id="timeline" hidden>
                                <div id="playhead"></div>
                            </div>
                        </div>
                    </td>
                    <td>
                        @Html.DisplayFor(modelItem => item.Rockstar.Name)
                    </td>
                    <td>
                        @Html.DisplayFor(modelItem => item.Tribe.Name)
                    </td>
                    <td>
                        @if (item.PublishedStatus)
                        {
                            @Html.DisplayFor(modelItem => item.DatePublished)
                        }
                        else
                        {
                            <p class="align-content-center">-----</p>
                        }
                    </td>
                    <td>
                        @if (item.PublishedStatus)
                        {
                            <p>Gepubliceerd</p>
                        }
                        else
                        {
                            <p>Concept</p>
                        }
                    </td>
                    <td>
                        @if (item.PublishedStatus)
                        {
                            <a asp-action="ChangeStatus" asp-route-id="@item.PodcastEpisodeId" asp-route-status="false" class="btn text-black">
                                <img class="ml-2" height="32" width="32" src="~/icons/x-circle.svg"/>
                            </a>
                        }
                        else
                        {
                            <a asp-action="ChangeStatus" asp-route-id="@item.PodcastEpisodeId" asp-route-status="true" class="btn text-black">
                                <img class="ml-2" height="32" width="32" src="~/icons/checkmark-circle.svg"/>
                            </a>
                        }
                    </td>
                    <td>
                        <a asp-action="Edit" asp-route-id="@item.PodcastEpisodeId" class="btn button mr-2">
                            BEWERKEN
                            <img class="ml-2" height="32" width="32" src="~/icons/Pen-geel.svg"/>
                        </a>
                    </td>
                </tr>
            }
            </tbody>
        </table>
    </div>
}
else if (ViewData["DataShowType"].ToString() == "cards" || ViewData["DataShowType"].ToString() == "")
{
    <div class="row">
        @foreach (var item in Model) {
            <div class="col-xl-3 col-lg-4 col-md-6 d-flex align-items-stretch  spaceBetweenArticles">
                <div class="card" style="width: 25rem; height: 20rem;">
                    <div class="card-header">
                        <audio id="music-@item.PodcastEpisodeId" preload="true">
                            <source src="@spotify.GetPreviewLink(spotify.GetSpotifyLinkId(item.URL))">
                        </audio>
                        <div id="audioplayer" onclick="test('@item.PodcastEpisodeId')">
                            <i id="pButton" class="fas fa-play"></i>
                            <div id="timeline-@item.PodcastEpisodeId">
                                <div id="playhead-@item.PodcastEpisodeId"></div>
                            </div>
                        </div>
                    </div>
                    <div class="card-body">
                       @* @if (item.Title != null)
                        {
                            if (item.Title.Length > 170)
                            {
                                <h5 style="min-width: 240px;">@item.Title.Substring(0, 170)...</h5>
                            }
                            else
                            {
                                <h5 style="min-width: 240px;">@item.Title</h5>
                            }
                        }*@
                        else
                        {
                            <h5>GEEN TITEL</h5>
                        }
                    </div>
                    <ul class="list-group list-group-flush">
                        <li class="list-group-item" style="background-color:#FFE000">
                            <a asp-action="Edit" asp-route-id="@item.PodcastEpisodeId" class="card-link btn button-white">
                                BEWERKEN
                                <img class="ml-2" height="32" width="32" src="~/icons/Pen-geel.svg"/>
                            </a>
                        </li>
                    </ul>
                </div>
            </div>
        }
    </div>
}
<script>

        var music 
        var duration 
        var pButton 
        var playhead 
        var timeline
        
        function test (id) {
            console.log('test')
            music = document.getElementById('music-'+id); // id for audio element
            duration = music.duration; // Duration of audio clip, calculated here for embedding purposes
            pButton = document.getElementById('pButton-'+id); // play button
            playhead = document.getElementById('playhead-'+id); // playhead
            timeline = document.getElementById('timeline-'+id); // timeline
        }
        
        // timeline width adjusted for playhead
        var timelineWidth = timeline.offsetWidth - playhead.offsetWidth;
        timeline.style.width = '85%'
        // play button event listenter
        pButton.addEventListener("click", play);
        // timeupdate event listener
        music.addEventListener("timeupdate", timeUpdate, false);
        // makes timeline clickable
        timeline.addEventListener("click", function (event) {
            moveplayhead(event);
            music.currentTime = duration * clickPercent(event);
        }, false);
        
        // returns click as decimal (.77) of the total timelineWidth
        function clickPercent(event) {
            return (event.clientX - getPosition(timeline)) / timelineWidth;
        }
        // makes playhead draggable
        playhead.addEventListener('mousedown', mouseDown, false);
        window.addEventListener('mouseup', mouseUp, false);
        // Boolean value so that audio position is updated only when the playhead is released
        var onplayhead = false;
        // mouseDown EventListener
        function mouseDown() {
            onplayhead = true;
            window.addEventListener('mousemove', moveplayhead, true);
            music.removeEventListener('timeupdate', timeUpdate, false);
        }
        // mouseUp EventListener
        // getting input from all mouse clicks
        function mouseUp(event) {
            if (onplayhead == true) {
                moveplayhead(event);
                window.removeEventListener('mousemove', moveplayhead, true);
                // change current time
                music.currentTime = duration * clickPercent(event);
                music.addEventListener('timeupdate', timeUpdate, false);
            }
            onplayhead = false;
        }
        // mousemove EventListener
        // Moves playhead as user drags
        function moveplayhead(event) {
            var newMargLeft = event.clientX - getPosition(timeline);
        
            if (newMargLeft >= 0 && newMargLeft <= timelineWidth) {
                playhead.style.marginLeft = newMargLeft + "px";
            }
            if (newMargLeft < 0) {
                playhead.style.marginLeft = "0px";
            }
            if (newMargLeft > timelineWidth) {
                playhead.style.marginLeft = timelineWidth + "px";
            }
        }
        // timeUpdate
        // Synchronizes playhead position with current point in audio
        function timeUpdate() {
            var playPercent = timelineWidth * (music.currentTime / duration);
            playhead.style.marginLeft = playPercent + "px";
            if (music.currentTime == duration) {
                pButton.className = "";
                pButton.className = "fas fa-play";
            }
        }
        //Play and Pause
        function play() {
            // start music
            if (music.paused) {
                music.play();
                // remove play, add pause
                pButton.className = "";
                pButton.className = "fas fa-pause";
            } else { // pause music
                music.pause();
                // remove pause, add play
                pButton.className = "";
                pButton.className = "fas fa-play";
            }
        }
        // Gets audio file duration
        music.addEventListener("canplaythrough", function () {
            duration = music.duration;
        }, false);
        // getPosition
        // Returns elements left position relative to top-left of viewport
        function getPosition(el) {
            return el.getBoundingClientRect().left;
        }

    //Scrollable Table
    $(document).ready(function () {
      $('#dtHorizontalVerticalExample').DataTable({
        "scrollX": true,
        "scrollY": 200,
      });
      $('.dataTables_length').addClass('bs-select');
    });
</script>