@model RockstarsIT.Models.Tribe


@{
    ViewData["Title"] = "Edit";
}

<h1  class="mt-3">TRIBE BEWERKEN</h1>

<hr />
<div class="row">
    <form asp-action="Edit" onsubmit="setFormSubmitting()">
        <input type="hidden" asp-for="TribeId" />
        <div class="row g-3">
            <div class="col-md-6 mb-3">
                <label class="control-label" lang="nl">Naam:</label> 
                <label class="control-label" lang="en-uk">Name:</label> 
                <br>
                <input asp-for="Name" class="textbox w-100" rows="5" />
                <span asp-validation-for="Name" class="text-danger"></span>
            </div>
            <div class="col-md-6 mb-3">
                <label asp-for="Spotify" class="control-label">Spotify Link:</label>
                <br />
                <input asp-for="Spotify" class="textbox w-100" rows="10" cols="50" />
                <span asp-validation-for="Spotify" class="text-danger"></span>
            </div>
            <div class="col-md-6 mb-3">
                <label class="control-label" lang="nl">Beschrijving:</label> 
                <label class="control-label" lang="en-uk">Description:</label> 
                <br>
                <textarea asp-for="Description" class="textarea w-100" rows="5"></textarea>
                <span asp-validation-for="Description" class="text-danger"></span>
            </div>
            <div class="col-md-6 mb-3">
                <label asp-for="LeadAddress" class="control-label" lang="nl">Tribe Lead Email Adres:</label>
                <label asp-for="LeadAddress" class="control-label" lang="en-uk">Tribe Lead Email Address:</label>
                <br />
                <input asp-for="LeadAddress" class="textbox w-100" rows="10" cols="50" />
                <span asp-validation-for="LeadAddress" class="text-danger"></span>
            </div>
        </div>
        <div class="row">
            <div class="col-md-6">
                @using (Html.BeginForm(FormMethod.Post))
                {
                    <button class="btn button mr-3" type="submit">
                        WIJZIGINGEN OPSLAAN
                        <img class="ml-2" height="32" width="32" src="~/icons/save-zwart.svg"/>
                    </button>

                    <a onclick="ConfirmDelete(this.name)" href="#" name="@Model.TribeId" class="btn button-cancel">
                        VERWIJDEREN
                        <img class="ml-2" height="32" width="32" src="~/icons/bin-wit.svg"/>
                    </a>
                    <input type="submit" asp-action="Delete" asp-route-id="@Model.TribeId" hidden id="@Model.TribeId"/>
                }
            </div>
        </div>
    </form>

    <div class="form-group">
    <label class="control-label">Teksten</label>
    <div class="bg-white"> 
        <ul class="nav nav-tabs" id="tab-list">
            @if (Model.TribeTextBlocks != null)
            {
                @if (Model.TribeTextBlocks.Count > 0)
                {
                    int count = 1;
                    foreach (var item in Model.TribeTextBlocks)
                    {
                        @if (item == Model.TribeTextBlocks.First())
                        {
                            <li class="nav-item">
                                <a class="nav-link active" data-id="@item.TribeTextBlockId" data-toggle="tab" href="#tab-@item.TribeTextBlockId">
                                    @count
                                </a>
                            </li>
                        }
                        else
                        {
                            <li class="nav-item">
                                <a class="nav-link" data-id="@item.TribeTextBlockId" data-toggle="tab" href="#tab-@item.TribeTextBlockId">
                                    @count
                                    @if (count > 1)
                                    {
                                        <button class="close" type="button" title="Remove this page">×</button>
                                    }
                                </a>
                            </li>
                        }
                        count++;
                    }
                }
            }

            <li class="nav-item" id="last-child">
                <a class="nav-link" id="add-tab" style="color:#000000;" href="">
                    Toevoegen
                </a>
            </li>
        </ul>
        <div class="tab-content" id="TabContent">
            @if (Model.TribeTextBlocks != null)
            {
                @if (Model.TribeTextBlocks.Count > 0)
                {
                    foreach (var item in Model.TribeTextBlocks)
                    {
                        @if (item == Model.TribeTextBlocks.First())
                        {
                            <div class="tab-pane fade show active" id="tab-@item.TribeTextBlockId">
                                <textarea class="textarea w-100" hidden rows="5">@item.Text</textarea>
                                <textarea class="editor">
                                    @item.Text
                                </textarea>
                            </div>
                        }
                        else    
                        {   
                            <div class="tab-pane fade" id="tab-@item.TribeTextBlockId">
                                <textarea class="textarea w-100" hidden rows="5">@item.Text</textarea>

                                <textarea class="editor">
                                    @item.Text
                                </textarea>
                            </div>
                        }
                    }
                }
           }
        </div>
       
        <button id="save-textblock" class="btn button">OPSLAAN</button>
    </div>
</div>
<div class="form-group">
    <form id="frmUpload">
        <label asp-for="Images" class="control-label">Afbeeldingen</label>
        <div class="row">
            <div class="col-md-5">
                <div class="custom-file upload__box">
                    <input asp-for="Images" class="custom-file-input upload__inputfile" multiple id="customFile">
                    <label asp-for="Images" class="custom-file-label" for="customFile" data-browse="Bestand kiezen"></label>
                    <span asp-validation-for="Images" class="text-danger"></span>
                </div>
            </div>
      
            <div class="col-md-2">
                <button type="submit" id="upload" class="btn button">UPLOAD</button>
            </div>
            <div id="loading">
                <p>Loading...</p>
            </div>
        </div>
    </form>   
</div>
<div class="form-group">
    <div id="wrap" class="upload__img-wrap row flex-nowrap overflow-auto">
        @if (Model.TribeImages != null)
        {
            @foreach (var item in Model.TribeImages) {
                <div class="upload__img-box col-3">
                    <div style="background-image: url(@item.URL);" class="img-bg">
                        <div id="delete" data-id="@item.TribeImageId" class="upload__img-close">
                        </div>
                    </div>
                </div>
            }
        }
    </div>
</div>
    <div>
        <a asp-action="Index" class="btn button-cancel mt-3">
            TERUG NAAR OVERZICHT
            <svg class="arrowsSvg-cancel" xmlns="http://www.w3.org/2000/svg" height="24" viewBox="0 0 24 24" width="24">
                <path d="M0 0h24v24H0z" fill="none" />
                <path d="M4 18l8.5-6L4 6v12zm9-12v12l8.5-6L13 6z" />
            </svg>
        </a>
    </div>
</div>


@section Scripts 
{
    @{
        await Html.RenderPartialAsync("_ValidationScriptsPartial");

    }
    <script>
    var formSubmitting = false;
    var setFormSubmitting = function() { formSubmitting = true; };
    
    function OpenEditor(updatefield) {
        let editelements = document.getElementsByName(updatefield);
        for(let i = 0; i < editelements.length;i++){
            if(editelements[i].hidden == true){
              editelements[i].hidden = false;
              document.getElementById(updatefield).innerHTML = "Cancel"
            }
            else{
              editelements[i].hidden = true;
              document.getElementById(updatefield).innerHTML = "Edit"
        }
        }
    }

    window.onload = function() {
        window.addEventListener("beforeunload", function (e) {
            if (formSubmitting) {
                return undefined;
            }
    
            var confirmationMessage = 'It looks like you have been editing something. '
                                    + 'If you leave before saving, your changes will be lost.';
    
            (e || window.event).returnValue = confirmationMessage; //Gecko + IE
            return confirmationMessage; //Gecko + Webkit, Safari, Chrome etc.
        });
    };

    function ConfirmDelete(id) {
        const conbtn2 = document.getElementById(id);

        let text = "Weet je zeker dat u deze podcast wilt verwijderen?"
        if (confirm(text) == true) {
            conbtn2.click();
        }
        else {
            console.log("test");
        }
    }

     jQuery(document).ready(function () {
            $("#loading").hide();

            $('#customFile').on('change',function(e) {
                //get the file name
                var fileName = e.target.files[0].name;
                //replace the "Choose a file" label
                $(this).next('.custom-file-label').html(fileName);
                document.getElementById("upload").focus()
            });

            $('#add-tab').click(function () {

                var data = new FormData(); 

                data.append('TribeId', $("#TribeId").val());
                
                $.ajax({  
                    async: true,
                    type: "POST",
                    dataType: "json",
                    url: "/Tribe/AddTextblock",  
                    data: data,
                    contentType: false, // Not to set any content header  
                    processData: false, // Not to process data  
                    success: function (response) {  
                        if (response.Success) {
                            var tabID = $("#tab-list li").length;
                            var html = '<li class="nav-item"><a class="nav-link" data-id="' + response.TribeTextblockId + '" data-toggle="tab" href="text-' + tabID + '" role="tab">' + tabID + '<button class="close" type="button" title="Remove this page">×</button></a></li>';
                            $('#last-child').before(html);
                            tabID++;
                        }
                    },  
                    error: function (response) { 
                        alert("failed to add textblock");  
                    }  
                });  
            });

            $('#tab-list').on('click','.close',function(){ 
                var data = new FormData();  
                var currentDiv = $(this);
             
                data.append('TribeTextBlockId', $(this).parent().data("id"));
                $.ajax({  
                    async: true,
                    type: "POST",
                    dataType: "json",
                    url: "/Tribe/DeleteTextBlock",  
                    data: data,
                    contentType: false, // Not to set any content header  
                    processData: false, // Not to process data  
                    success: function (response) {  
                        if (response.Success) {

                            var href = currentDiv.parent().attr('href');
                            //remove tabheader
                            currentDiv.closest(".nav-item").remove();
                            //remove tabcontent
                            $(href).remove();

                            //display first tab
                            var tabFirst = $('#tab-list a:first');
                            tabFirst.tab('show');
                        }
                    },  
                    error: function (response) {  
                        alert("failed to delete text");  
                    }  
                });  
            });

            $("#save-textblock").click(function (e) {  
                
                var data = new FormData(); 
                var activeTabHeader = $("#tab-list .nav-link.active");
                var activeTabContent = $("#TabContent .tab-pane.active textarea");

                data.append('TribeTextBlockId', activeTabHeader.data("id"));
                data.append('TribeId', $("#TribeId").val());
                data.append('Text', activeTabContent.val());

                $.ajax({    
                    async: true,
                    type: "POST",
                    dataType: "json",
                    url: "/Tribe/SaveTextblock",  
                    data: data,
                    contentType: false, // Not to set any content header  
                    processData: false, // Not to process data  
                    success: function (response) {  
                        if (response.Success) {

                            alert(response.Message);
                            
                            for (const element of response.TribeImages) {
                                var html = "<div class='upload__img-box col-3'><div style='background-image: url(" + element.Item2 + ")' class='img-bg'><div id='delete' data-id='" + element.Item1 + "' class='upload__img-close'></div></div></div>";
                                $('#wrap').append(html);
                            }
                        }
                    },  
                    error: function (response) { 
                        alert("failed to upload image");  
                    }  
                });  
            });

            //upload image
            $('#upload').click(function () {
                
                if ($('#frmUpload').valid()) {
                    $('#frmUpload').submit();
                }
                else {
                    return false;
                }
            });

            $('#frmUpload').on("submit", function (event) {
                if (window.FormData !== undefined) {  
                    event.preventDefault();
                    $('#upload').attr('disabled', 'disabled');
                    $("#loading").show();
                    var files = $("#customFile").get(0).files;  
              
                    // Create FormData object  
                    var data = new FormData();  
  
                    // Looping over all files and add it to FormData object  
                    for (var i = 0; i < files.length; i++) {  
                        data.append('Images', files[i]);  
                    }  
              
                    // Adding tribeId to FormData object  
                    data.append('TribeId', $("#TribeId").val());  

                    $.ajax({  
                        async: true,
                        type: "POST",
                        dataType: "json",
                        url: "/Tribe/UploadImage",  
                        data: data,
                        contentType: false, // Not to set any content header  
                        processData: false, // Not to process data  
                        success: function (response) {  
                            if (response.Success) {
                                $("#loading").hide();
                                //show image
                                for (const element of response.TribeImages) {
                                    var html = "<div class='upload__img-box col-3'><div style='background-image: url(" + element.Item2 + ")' class='img-bg'><div id='delete' data-id='" + element.Item1 + "' class='upload__img-close'></div></div></div>";
                                    $('#wrap').append(html);
                                }
                                //reset file input
                                $('#customFile').val('');
                                $('#customFile').next('.custom-file-label').html("Selecteer een of meerdere afbeeldingen");
                                $('#upload').removeAttr('disabled');
                            }
                        },  
                        error: function (response) { 
                            alert("failed to upload image");  
                        }  
                    });  
                } else {  
                    alert("FormData is not supported.");  
                }  
            });   

          //delete image
          $(document).on("click", ".upload__img-close", function (e) {

            var currentDiv = $(this);
            // Create FormData object  
            var data = new FormData();  
              
            // Adding tribeId to FormData object  
            data.append('TribeImageId', $(this).data("id"));

            $.ajax({  
                async: true,
                type: "POST",
                dataType: "json",
                url: "/Tribe/DeleteImage",  
                data: data,
                contentType: false, // Not to set any content header  
                processData: false, // Not to process data  
                success: function (response) {  
                    if (response.Success) {
                        alert(response.Message);
                        //delete div
                        currentDiv.closest(".upload__img-box").remove();
                    }
                },  
                error: function (response) {  
                    alert("failed to delete image");  
                }  
            });  
          });
        });
</script>
}


