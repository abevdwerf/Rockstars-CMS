@model RockstarsIT.Models.Tribe
@using Microsoft.Extensions.Localization
@inject IStringLocalizer<RockstarsIT.Controllers.TribeController> Localizer

@{
    ViewData["Title"] = "Edit";
}

<h1 class="mt-3">@Localizer["edit.pagetitle"]</h1>

<hr />
<div class="row">
    <form asp-action="Edit" onsubmit="setFormSubmitting()">
        <input type="hidden" asp-for="TribeId" />
        <div class="row g-3">
            <div class="col-md-6 mb-3">
                <label class="control-label">@Localizer["edit.name"]</label>
                <br>
                <input asp-for="Name" class="textbox w-100" rows="5" />
                <span asp-validation-for="Name" class="text-danger"></span>
            </div>
            <div class="col-md-6 mb-3">
                <label asp-for="Spotify" class="control-label">@Localizer["edit.spotify"]</label>
                <br />
                <input asp-for="Spotify" class="textbox w-100" rows="10" cols="50" />
                <span asp-validation-for="Spotify" class="text-danger"></span>
            </div>
            <div class="col-md-6 mb-3">
                <label class="control-label">@Localizer["edit.description"]</label>
                <br>
                <textarea asp-for="Description" class="textarea w-100" rows="5"></textarea>
                <span asp-validation-for="Description" class="text-danger"></span>
            </div>
            <div class="col-md-6 mb-3">
                <label asp-for="LeadAddress" class="control-label">@Localizer["edit.leadaddress"]</label>
                <br />
                <input asp-for="LeadAddress" class="textbox w-100" rows="10" cols="50" />
                <span asp-validation-for="LeadAddress" class="text-danger"></span>
            </div>
        </div>
        <div class="row">
            <div class="col-md-6">
                @using (Html.BeginForm(FormMethod.Post))
                {
                    <button onclick="SaveAll()" class="btn button mr-3" type="submit">
                        @Localizer["edit.btn.save"]
                        <img class="ml-2" height="32" width="32" src="~/icons/save-zwart.svg" />
                    </button>

                    <a onclick="ConfirmDelete(this.name)" href="#" name="@Model.TribeId" class="btn button-cancel">
                        @Localizer["edit.btn.delete"]
                        <img class="ml-2" height="32" width="32" src="~/icons/bin-wit.svg" />
                    </a>
                    <input type="submit" asp-action="Delete" asp-route-id="@Model.TribeId" hidden id="@Model.TribeId" />
                }
            </div>
        </div>
    </form>
    <br>
    <br>

        <div class="form-group">
            <label class="control-label">@Localizer["edit.text"]</label>
            <div class="bg-white">
                <ul class="nav nav-tabs" id="tab-list">
                    @if (Model.TribeTextBlocks != null)
                    {
                        @if (Model.TribeTextBlocks.Count > 0)
                        {
                            int count = 1;
                            foreach (var item in Model.TribeTextBlocks)
                            {
                                @if (item == Model.TribeTextBlocks.First())
                                {
                                    <li class="nav-item">
                                        <a class="Teksten nav-link active" onclick="DelButton.hidden = true" id="@item.TribeTextBlockId" data-id="@item.TribeTextBlockId" data-toggle="tab" href="#tab-@item.TribeTextBlockId">
                                            @count
                                        </a>
                                    </li>
                                }
                                else
                                {
                                    <li class="nav-item">
                                        <a class="Teksten nav-link" onclick="DelButton.hidden = false" id="@item.TribeTextBlockId" data-id="@item.TribeTextBlockId" data-toggle="tab" href="#tab-@item.TribeTextBlockId">
                                            @count
                                            @if (count > 1)
                                            {
                                                <button class="close" type="button" hidden title="Remove this page"></button>
                                            }
                                        </a>
                                    </li>
                                }
                                count++;
                            }
                        }
                    }

                    <li class="nav-item" id="last-child">
                        <a class="nav-link" id="add-tab" style="color:#000000;" href="">
                            @Localizer["edit.btn.addtext"]
                        </a>
                    </li>
                    <button id="save-textblock" hidden class="btn button">@Localizer["edit.btn.savetext"]</button>
                    <button id="VerwijderBtn" onclick="DeleteCurrentArticel();" class="btn btn-danger">@Localizer["edit.btn.deletetext"]</button>
                </ul>
                <div class="tab-content" id="TabContent">
                    @if (Model.TribeTextBlocks != null)
                    {
                        @if (Model.TribeTextBlocks.Count > 0)
                        {
                            foreach (var item in Model.TribeTextBlocks)
                            {
                                @if (item == Model.TribeTextBlocks.First())
                                {
                                    <div class="tab-pane fade show active" id="tab-@item.TribeTextBlockId">
                                        <textarea class="textarea w-100" hidden rows="5">@item.Text</textarea>
                                        <textarea class="editor">
                                            @item.Text
                                                </textarea>
                                    </div>
                                }
                                else
                                {
                                    <div class="tab-pane fade" id="tab-@item.TribeTextBlockId">
                                        <textarea class="textarea w-100" hidden rows="5">@item.Text</textarea>

                                        <textarea class="editor">
                                            @item.Text
                                                </textarea>
                                    </div>
                                }
                            }
                        }
                    }
                </div>



            </div>
        </div>
        <div class="form-group">
            <form id="frmUpload">
                <label asp-for="Images" class="control-label">@Localizer["edit.images"]</label>
                <div class="row">
                    <div class="col-md-5">
                        <div class="custom-file upload__box">
                            <input asp-for="Images" class="custom-file-input upload__inputfile" multiple id="customFile">
                            <label asp-for="Images" class="custom-file-label" for="customFile" data-browse="@Localizer["edit.choosefile"]"></label>
                            <span asp-validation-for="Images" class="text-danger"></span>
                        </div>
                    </div>

                    <div class="col-md-2">
                        <button type="submit" id="upload" class="btn button">UPLOAD</button>
                    </div>
                    <div id="loading">
                        <p>@Localizer["edit.loading"]</p>
                    </div>
                </div>
            </form>
        </div>
        <div class="form-group">
            <div id="wrap" class="upload__img-wrap row flex-nowrap overflow-auto">
                @if (Model.TribeImages != null)
                {
                    @foreach (var item in Model.TribeImages)
                    {
                        <div class="upload__img-box col-3">
                            <div style="background-image: url(@item.URL);" class="img-bg">
                                <div id="delete" data-id="@item.TribeImageId" class="upload__img-close">
                                </div>
                            </div>
                        </div>
                    }
                }
            </div>
        </div>
        
    <div>
        <a asp-action="Index" class="btn button-cancel mt-3">
            @Localizer["edit.btn.back"]
            <svg class="arrowsSvg-cancel" xmlns="http://www.w3.org/2000/svg" height="24" viewBox="0 0 24 24" width="24">
                <path d="M0 0h24v24H0z" fill="none" />
                <path d="M4 18l8.5-6L4 6v12zm9-12v12l8.5-6L13 6z" />
            </svg>
        </a>
    </div>
</div>


@section Scripts
{
    @{
        await Html.RenderPartialAsync("_ValidationScriptsPartial");

    }
    <script>
    var formSubmitting = false;
    var setFormSubmitting = function() { formSubmitting = true; };
    
    function OpenEditor(updatefield) {
        let editelements = document.getElementsByName(updatefield);
        for(let i = 0; i < editelements.length;i++){
            if(editelements[i].hidden == true){
              editelements[i].hidden = false;
              document.getElementById(updatefield).innerHTML = "Cancel"
            }
            else{
              editelements[i].hidden = true;
              document.getElementById(updatefield).innerHTML = "Edit"
        }
        }
        }

        let DelButton = document.getElementById("VerwijderBtn");
        DelButton.hidden = true;

        function SaveAll() {
            document.getElementById("save-textblock").click();
        }

        function DeleteCurrentArticel() {
            let test = document.querySelector(".nav-link.active button");
            test.click();
        }

    //window.onload = function() {
    //    window.addEventListener("beforeunload", function (e) {
    //        if (formSubmitting) {
    //            return undefined;
    //        }
    
    //        var confirmationMessage = 'It looks like you have been editing something. '
    //                                + 'If you leave before saving, your changes will be lost.';
    
    //        (e || window.event).returnValue = confirmationMessage; //Gecko + IE
    //        return confirmationMessage; //Gecko + Webkit, Safari, Chrome etc.
    //    });
    //};

    function ConfirmDelete(id) {
        const conbtn2 = document.getElementById(id);

        let text = "Weet je zeker dat u deze podcast wilt verwijderen?"
        if (confirm(text) == true) {
            conbtn2.click();
        }
        else {
            console.log("test");
        }
    }

     jQuery(document).ready(function () {
            $("#loading").hide();

            $('#customFile').on('change',function(e) {
                //get the file name
                var fileName = e.target.files[0].name;
                //replace the "Choose a file" label
                $(this).next('.custom-file-label').html(fileName);
                document.getElementById("upload").focus()
            });

            $('#add-tab').click(function () {

                var data = new FormData(); 

                data.append('TribeId', $("#TribeId").val());
                
                $.ajax({  
                    async: true,
                    type: "POST",
                    dataType: "json",
                    url: "/Tribe/AddTextblock",  
                    data: data,
                    contentType: false, // Not to set any content header  
                    processData: false, // Not to process data  
                    success: function (response) {  
                        if (response.Success) {
                            var tabID = $("#tab-list li").length;
                            var html = '<li class="nav-item"><a class="nav-link" data-id="' + response.TribeTextblockId + '" data-toggle="tab" href="text-' + tabID + '" role="tab">' + tabID + '<button class="close" type="button" title="Remove this page">×</button></a></li>';
                            $('#last-child').before(html);
                            tabID++;
                        }
                    },  
                    error: function (response) { 
                        // alert("failed to add textblock");  
                    }  
                });  
            });

            $('#tab-list').on('click','.close',function(){ 
                var data = new FormData();  
                var currentDiv = $(this);
             
                data.append('TribeTextBlockId', $(this).parent().data("id"));
                $.ajax({  
                    async: true,
                    type: "POST",
                    dataType: "json",
                    url: "/Tribe/DeleteTextBlock",  
                    data: data,
                    contentType: false, // Not to set any content header  
                    processData: false, // Not to process data  
                    success: function (response) {  
                        if (response.Success) {

                            var href = currentDiv.parent().attr('href');
                            //remove tabheader
                            currentDiv.closest(".nav-item").remove();
                            //remove tabcontent
                            $(href).remove();

                            //display first tab
                            var tabFirst = $('#tab-list a:first');
                            tabFirst.tab('show');
                        }
                    },  
                    error: function (response) {  
                        // alert("failed to delete text");  
                    }  
                });  
            });

         var allTabHeaders = $("#tab-list .Teksten.nav-link");
         var AllTabContent = $("#TabContent .tab-pane .textarea");

         var counter = 0;
            $("#save-textblock").click(function (e) {  
                for (var i = 0; i < allTabHeaders.length; i++) {
                    var data = new FormData();

                    console.log(AllTabContent);
                    console.log(AllTabContent);

                    data.append('TribeTextBlockId', allTabHeaders[i].id);
                    data.append('TribeId', $("#TribeId").val());
                    data.append('Text', AllTabContent[i].value);

                    $.ajax({
                        async: true,
                        type: "POST",
                        dataType: "json",
                        url: "/Tribe/SaveTextblock",
                        data: data,
                        contentType: false, // Not to set any content header  
                        processData: false, // Not to process data  
                        success: function (response) {
                            if (response.Success) {
                                counter++;
                                if (counter == allTabHeaders.length) {
                                    // alert(response.Message);
                                }

                                for (const element of response.TribeImages) {
                                    var html = "<div class='upload__img-box col-3'><div style='background-image: url(" + element.Item2 + ")' class='img-bg'><div id='delete' data-id='" + element.Item1 + "' class='upload__img-close'></div></div></div>";
                                    $('#wrap').append(html);
                                }
                            }
                        },
                        error: function (response) {
                            // alert("failed to upload image");
                        }
                    });
                }
            });

            //upload image
            $('#upload').click(function () {
                
                if ($('#frmUpload').valid()) {
                    $('#frmUpload').submit();
                }
                else {
                    return false;
                }
            });

            $('#frmUpload').on("submit", function (event) {
                if (window.FormData !== undefined) {  
                    event.preventDefault();
                    $('#upload').attr('disabled', 'disabled');
                    $("#loading").show();
                    var files = $("#customFile").get(0).files;  
              
                    // Create FormData object  
                    var data = new FormData();  
  
                    // Looping over all files and add it to FormData object  
                    for (var i = 0; i < files.length; i++) {  
                        data.append('Images', files[i]);  
                    }  
              
                    // Adding tribeId to FormData object  
                    data.append('TribeId', $("#TribeId").val());  

                    $.ajax({  
                        async: true,
                        type: "POST",
                        dataType: "json",
                        url: "/Tribe/UploadImage",  
                        data: data,
                        contentType: false, // Not to set any content header  
                        processData: false, // Not to process data  
                        success: function (response) {  
                            if (response.Success) {
                                $("#loading").hide();
                                //show image
                                for (const element of response.TribeImages) {
                                    var html = "<div class='upload__img-box col-3'><div style='background-image: url(" + element.Item2 + ")' class='img-bg'><div id='delete' data-id='" + element.Item1 + "' class='upload__img-close'></div></div></div>";
                                    $('#wrap').append(html);
                                }
                                //reset file input
                                $('#customFile').val('');
                                $('#customFile').next('.custom-file-label').html("Selecteer een of meerdere afbeeldingen");
                                $('#upload').removeAttr('disabled');
                            }
                        },  
                        error: function (response) { 
                            // alert("failed to upload image");  
                        }  
                    });  
                } else {  
                    // alert("FormData is not supported.");  
                }  
            });   

          //delete image
          $(document).on("click", ".upload__img-close", function (e) {

            var currentDiv = $(this);
            // Create FormData object  
            var data = new FormData();  
              
            // Adding tribeId to FormData object  
            data.append('TribeImageId', $(this).data("id"));

            $.ajax({  
                async: true,
                type: "POST",
                dataType: "json",
                url: "/Tribe/DeleteImage",  
                data: data,
                contentType: false, // Not to set any content header  
                processData: false, // Not to process data  
                success: function (response) {  
                    if (response.Success) {
                        // alert(response.Message);
                        //delete div
                        currentDiv.closest(".upload__img-box").remove();
                    }
                },  
                error: function (response) {  
                    // alert("failed to delete image");  
                }  
            });  
          });
        });
</script>
}